{
  "name": "@wbe/deferred-promise",
  "version": "2.3.0",
  "description": "Create a deferred promise who can be resolved or rejected from anywhere.",
  "author": "Willy Brauner",
  "license": "MIT",
  "types": "dist/index",
  "source": "src/index.ts",
  "main": "./dist/index.cjs",
  "module": "./dist/index.module.js",
  "unpkg": "./dist/index.umd.js",
  "private": false,
  "sideEffects": false,
  "repository": {
    "type": "git",
    "url": "https://github.com/willybrauner/deferred-promise.git"
  },
  "scripts": {
    "build": "npm run clean && npm run compile",
    "clean": "rm -rf ./dist && rm -rf tsconfig.tsbuildinfo",
    "compile": "microbundle",
    "test": "jest"
  },
  "devDependencies": {
    "@babel/preset-env": "^7.15.0",
    "@babel/preset-typescript": "^7.15.0",
    "@types/jest": "^26.0.20",
    "@types/node": "^14.14.20",
    "jest": "^26.6.3",
    "microbundle": "^0.13.3",
    "ts-jest": "^26.4.4",
    "ts-node": "^9.1.1",
    "typescript": "^4.1.3"
  },
  "keywords": [
    "deferred-promise"
  ],
  "publishConfig": {
    "access": "public"
  }
}
